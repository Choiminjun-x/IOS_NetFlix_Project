//
//  DetailPresenter.swift
//  cleanSwift
//
//  Created by 최민준(Minjun Choi) on 2021/08/03.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol DetailPresentationLogic {
    func presentMovieDetail(response: Detail.RequestMovieDetail.Response)
}

class DetailPresenter: DetailPresentationLogic {
    weak var viewController: DetailDisplayLogic?
    // MARK: - Controller에  ViewModel 생성해서 전달
    func presentMovieDetail(response: Detail.RequestMovieDetail.Response){
        
        let genres = response.dto.genres
        
        let genresModels: [genresModel] = genres?.compactMap {
            guard let name = $0.name else { return nil }
            return .init(name: name)
        } ?? []
        
        // 두번째 URL -> response.dto.belongsToCollection?.backdropPath
        
        //Detail Page에 필요한 데이터 분류 -> ViewController로 전달 
        self.viewController?.displayMovieDetail(viewModel: .init(detailModel: .init(
              posterURL: response.baseURL + (response.dto.backdropPath ?? ""),
              posterURL2: response.baseURL + (response.dto.belongsToCollection?.backdropPath ?? ""),
              title: response.dto.title ?? "",
              discription: response.dto.overview ?? "",
              year: response.dto.releaseDate ?? "",
              runtime: response.dto.runtime ?? 0,
              apiType: response.apiType,
              voteAverage: response.dto.voteAverage ?? 0,
              genres: genresModels,
              tagline: response.dto.tagline ?? "")
        ))
    }
}
