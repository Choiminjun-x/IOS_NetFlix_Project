//
//  SearchWorker.swift
//  cleanSwift
//
//  Created by 최민준(Minjun Choi) on 2021/08/10.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import RxSwift
import Alamofire

class SearchWorker {
    
    let apiKey = "1c07ffe0d8a785d0d1ed3d288170b276"
    let language = "ko" //en-US
    
    //MARK: - request API
    func requestSearchList(pageNum: Int, keyWord: String?) -> Single<MovieSearchListDto>{
        .create { observer in //observer 형태의 결과를 반환
            
            if let keyword = keyWord {
                let url = "https://api.themoviedb.org/3/search/movie?api_key=\(self.apiKey)&language=\(self.language)&page=\(pageNum)&query=\(keyword)"
                
                AF.request(url, method: .get)
                    .validate(contentType: ["application/json"])
                    .responseJSON { response in
                        print(response.result) //들어옴
                        switch response.result {
                        case .success(_):
                            print("API Connect Success - Search Page")
                            guard let result = response.data else { return }
                            do {
                                let dto = try JSONDecoder().decode(MovieSearchListDto.self, from: result)
                                observer(.success(dto))
                            } catch (let error) {
                                observer(.failure(error))
                            }
                        case .failure(let error):
                            observer(.failure(error))
                        }
                    }
            }
            
            else {
                let url = "https://api.themoviedb.org/3/movie/popular?api_key=\(self.apiKey)&language=\(self.language)&page=\(pageNum)"
                
                AF.request(url, method: .get)
                    .validate(contentType: ["application/json"])
                    .responseJSON { response in
                        print(response.result) //들어옴
                        switch response.result {
                        case .success(_):
                            print("API Connect Success - Search Page")
                            guard let result = response.data else { return }
                            do {
                                let dto = try JSONDecoder().decode(MovieSearchListDto.self, from: result)
                                observer(.success(dto))
                            } catch (let error) {
                                observer(.failure(error))
                            }
                        case .failure(let error):
                            observer(.failure(error))
                        }
                    }
            }
            return Disposables.create()
        }
    }
}
